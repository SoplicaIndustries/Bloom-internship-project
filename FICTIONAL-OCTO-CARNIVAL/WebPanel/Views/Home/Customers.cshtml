@using WebPanel.Models

<h2>Customers</h2>
<style>
    .cell-center{
          text-align: center!important  
    }
    cell-center{
          text-align: center!important  
    }
    #cell-center{
  text-align: center!important  
    }
    td[role=columnheader] {  
    text-align: center!important;
    font-weight:700;
    color:black;
    }
</style>

<script src="https://unpkg.com/devextreme-intl@18.2/dist/devextreme-intl.min.js"></script>  
<script src="https://cdn3.devexpress.com/jslib/18.2.7/js/localization/dx.messages.cs.js"></script>  

<script>  
    DevExpress.localization.locale("pl-PL");  
    DevExpress.config({ defaultCurrency: "PLN" });  
</script>  
<script>
    function cellTemplate(cellElement, cellInfo) {  
        $('<a/>')
            .attr({ href: '@Url.RouteUrl("default", new { action = "GetFile", controller = "Invoices" })' + `?id=${cellInfo.data.Id}` })
            .append("<img src='https://cdn-icons-png.flaticon.com/128/337/337946.png' width='15%' height='15%'>")
        .appendTo(cellElement);  
}  
</script>
@(Html.DevExtreme().DataGrid<Customers>()
    .ID("gridContainer")
    .DataSource(d => d.WebApi().Controller("Customer").LoadAction("Get").Key("Id"))
    .Paging(p => p.PageSize(15))
    .ShowBorders(true)
    .Columns(columns => {
        columns.AddFor(m => m.Name).Width("50%");

        columns.AddFor(m => m.Balance).Width("15%").Format(Format.Currency).Format(f => f.Type(Format.Currency).Precision(2)); 

        columns.AddFor(m => m.Id).Width("35%").CssClass("cell-center");

    })
    .MasterDetail(m => m
        .Enabled(true)
        .Template(new TemplateName("gridContainer-details"))
    )
)

@using(Html.DevExtreme().NamedTemplate("gridContainer-details")) {
    @(Html.DevExtreme().TabPanel()
        .Items(items => {
            items.Add()
                .Title("Transactions")
                .Template(new TemplateName("gridContainer-details-tab1Template1"))
                .Option("tabExtras", new { Id = new JS("data.Id") });

            items.Add()
                .Title("Invoices")
                .Template(new TemplateName("gridContainer-details-tab1Template2"))
                .Option("tabExtras", new { Id = new JS("data.Id") });

            items.Add()
                .Title("Discounts")
                .Template(new TemplateName("gridContainer-details-tab1Template3"))
                .Option("tabExtras", new { Id = new JS("data.Id") });


           
        })
    )
}

@using(Html.DevExtreme().NamedTemplate("gridContainer-details-tab1Template1")) {
     @(Html.DevExtreme().DataGrid<Transactions>()
        .ShowBorders(true)
        .DataSource(d => d.Mvc()
            .Controller("Transactions")
                        .LoadAction("GetTransactionById")
                        .LoadParams(new { Id = new JS("tabExtras.Id") })
                        .Key("Id")
            
        )
        .Paging(p => p.PageSize(5))
        .Columns(columns => {
            columns.AddFor(t => t.Product_Name).CssClass("cell-center");
            columns.AddFor(t => t.Description);
            columns.AddFor(t => t.Price).Width("10%").CssClass("cell-center").Format(Format.Currency).Format(f => f.Type(Format.Currency).Precision(2));
              columns.AddFor(t => t.Balance_After).Format(Format.Currency).Format(f => f.Type(Format.Currency).Precision(2));
            columns.AddFor(t => t.Customer_Id).Visible(false);
            columns.AddFor(t => t.Id).Visible(false);
            columns.AddFor(t => t.Date).CssClass("cell-center");
              columns.AddFor(t => t.Reference_Number).CssClass("cell-center");
    
        })
       
    )
}



@using(Html.DevExtreme().NamedTemplate("gridContainer-details-tab1Template2")) {
     @(Html.DevExtreme().DataGrid<Invoices>()
        .ShowBorders(true)
        .DataSource(d => d.Mvc()
            .Controller("Invoices")
                        .LoadAction("GetInvoicesById")
                        .LoadParams(new { Id = new JS("tabExtras.Id") })
                        .Key("Id")
            
        )
        .Paging(p => p.PageSize(5))
        .Columns(columns => {
             columns.AddFor(t => t.InvoiceNo).Width("60%");
            columns.AddFor(t => t.Date).CssClass("cell-center").Width("15%");
            columns.AddFor(t => t.Price).Format(Format.Currency).Format(f => f.Type(Format.Currency).Precision(2)).Width("13%");
           columns.AddFor(m => m.Document_Path).CssClass("cell-center").Width("5%").CellTemplate(new JS("cellTemplate")); 
        })
       
    )

}
<script>
    function myDataGridColumn_setCellValue(arg) {
        return tabExtras.Id;
    }

    
    
   
</script>


@using(Html.DevExtreme().NamedTemplate("gridContainer-details-tab1Template3")) {
     @(Html.DevExtreme().DataGrid<Discounts>()
        .ShowBorders(true)
        .Editing(editing => {
        editing.Mode(GridEditMode.Row);
        editing.AllowAdding(true);
        editing.AllowDeleting(true);
        
    })

        .Height("90%")
        .Paging(p => p.PageSize(5))
        .Columns(columns => {
            columns.AddFor(t => t.Id).AllowEditing(false).Visible(false);
            columns.AddFor(t => t.Name).Lookup(lookup => lookup.DataSource(d => d.Mvc().Controller("Product").LoadAction("Get").Key("Id")).ValueExpr("Name").DisplayExpr("Name"));
            columns.AddFor(t => t.Description);
            columns.AddFor(t => t.UnitOfUsageId).Lookup(lookup => lookup.DataSource(d => d.Mvc().Controller("UnitOfUsage").LoadAction("Get").Key("Id")).ValueExpr("Id").DisplayExpr("Name"));
            columns.AddFor(t => t.Price).Format(f => f.Type(Format.Currency).Precision(2)); 
            columns.AddFor(t => t.Discount_Percentage).Format(Format.Percent).AllowEditing(false);
            columns.AddFor(t => t.Customer_Price).Format(f => f.Type(Format.Currency).Precision(2));
            columns.AddFor(t => t.Customer_Id).AllowEditing(false).Visible(false);
        })
        
        .DataSource(d => d.Mvc()
            .Controller("Discount")
                        .LoadAction("GetDiscountsById")
                        .LoadParams(new { Id = new JS("tabExtras.Id") })
                        .Key("Id")
                        .InsertAction("Post")
                        .DeleteAction("Delete")
                        
                        
                        
            
        )
        .OnInitNewRow(@<text>function(e){


               
              e.data.Customer_Id = tabExtras.Id;
              
                }</text>)
        
       
    )

}


